openapi: 3.0.3
info:
  title: 行動任務卡片 API
  version: 2.0.0
  description: 提供活動管理與留言互動的統一回應格式 API
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.example.com/v1
    description: 生產環境
  - url: https://api-staging.example.com/v1
    description: 測試環境

security:
  - bearerAuth: []

tags:
  - name: Activities
    description: 活動 CRUD 操作
  - name: Activities verify
    description: 活動 CRUD 加入行動操作
  - name: Posts
    description: 貼文 CRUD 操作 與按讚功能
  - name: Comments
    description: 留言 CRUD

paths:
  /activities:
    post:
      summary: 新增活動
      description: 建立一個新的任務活動
      tags:
        - Activities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivityCreate"
      responses:
        "201":
          description: 活動建立成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              examples:
                success:
                  value:
                    success: true
                    message: "活動建立成功"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/ValidationError"
    get:
      summary: 取得全部活動清單 (使用者)
      description: 支援分頁、排序和篩選的活動清單查詢
      tags:
        - Activities
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
        # - $ref: "#/components/parameters/Sort"
        - $ref: "#/components/parameters/Order"
        - name: title
          in: query
          description: 依標題篩選
          schema:
            type: string
        # - name: member
        #   in: query
        #   description: 依成員篩選
        #   schema:
        #     type: string
        - name: startDate
          in: query
          description: 開始日期範圍（格式：YYYY-MM-DD）
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 結束日期範圍（格式：YYYY-MM-DD）
          schema:
            type: string
            format: date
      responses:
        "200":
          description: 活動清單
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    type: array
                    items:
                      $ref: "#/components/schemas/Activity"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /activities/{activityId}:
    get:
      summary: 取得單一活動
      description: 根據活動 ID 取得活動詳細資料
      tags:
        - Activities
      parameters:
        - $ref: "#/components/parameters/ActivityId"
      responses:
        "200":
          description: 活動資料
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    $ref: "#/components/schemas/Activity"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: 編輯活動
      description: 更新指定活動的資料
      tags:
        - Activities
      parameters:
        - $ref: "#/components/parameters/ActivityId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivityUpdate"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
                examples:
                success:
                  value:
                    success: true
                    content:
                      message: "活動已儲存編輯"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/ValidationError"
    delete:
      summary: 刪除活動
      description: 永久刪除指定的活動
      tags:
        - Activities
      parameters:
        - $ref: "#/components/parameters/ActivityId"
      responses:
        "200":
          description: 刪除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              examples:
                success:
                  value:
                    success: true
                    content:
                      message: "活動已成功刪除"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /activities/{activityId}/own:
    get:
      tags: [Activities]
      summary: 取得自己的活動清單(可編輯)
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/ActivityId"
      responses:
        "200":
          description: 自己的活動清單
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    type: array
                    items:
                      type: integer
                    example: ["act_1", "act_2", "act_13"]

  /activities/{activityId}/join-requests:
    post:
      summary: 提交加入請求
      description: 使用者對活動發送加入請求
      tags:
        - Activities verify
      parameters:
        - $ref: "#/components/parameters/ActivityId"
        - $ref: "#/components/parameters/UserId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                content:
                  $ref: "#/components/schemas/JoinRequestInput"
      responses:
        "201":
          description: 加入請求已建立
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    $ref: "#/components/schemas/JoinRequest"
        "400":
          description: 請求格式錯誤
        "409":
          description: 已經申請過或已參加活動

    get:
      summary: 主辦方查詢加入請求
      description: 主辦方查詢某活動所有加入請求
      tags:
        - Activities verify
      parameters:
        - $ref: "#/components/parameters/ActivityId"
      responses:
        "200":
          description: 查詢成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JoinRequest"
        "403":
          description: 無權限操作
        "404":
          description: 活動不存在

  /activities/{activity_id}/join-requests/{userId}:
    post:
      summary: 舉辦方是否接受加入請求
      description: 舉辦方同意或拒絕特定使用者加入活動
      tags:
        - Activities verify
      parameters:
        # - $ref: "#/components/parameters/RequestId"
        - $ref: "#/components/parameters/UserId"
        - name: approve
          in: query
          required: true
          description: 是否接受加入請求
          schema:
            type: boolean
            example: true
      responses:
        "200":
          description: 加入請求已接受
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    $ref: "#/components/schemas/JoinReult"
        "403":
          description: 無權限操作
        "404":
          description: 請求不存在

  /institutions/{InstitutionId}/posts:
    get:
      summary: 取得活動所有貼文
      description: 根據活動 ID 取得貼文清單
      tags:
        - Posts
      parameters:
        - $ref: "#/components/parameters/InstitutionId"
        - $ref: "#/components/parameters/rel_ActivityId"
      responses:
        "200":
          description: 活動資料
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    type: array
                    items:
                      $ref: "#/components/schemas/Post"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /institutions/{InstitutionId}/posts/{postId}:
    get:
      summary: 取得單一貼文
      description: 根據活動 ID 取得活動詳細資料
      tags:
        - Posts
      parameters:
        - $ref: "#/components/parameters/InstitutionId"
        - $ref: "#/components/parameters/rel_ActivityId"
        - $ref: "#/components/parameters/PostId"
      responses:
        "200":
          description: 活動資料
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    $ref: "#/components/schemas/PostBase"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: 編輯貼文
      description: 更新指定貼文的資料
      tags:
        - Posts
      parameters:
        - $ref: "#/components/parameters/InstitutionId"
        - $ref: "#/components/parameters/ActivityId"
        - $ref: "#/components/parameters/PostId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostBase"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              examples:
                success:
                  value:
                    success: true
                    content:
                      message: "貼文已儲存編輯"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/ValidationError"
    delete:
      summary: 刪除貼文
      description: 永久刪除指定的貼文
      tags:
        - Posts
      parameters:
        - $ref: "#/components/parameters/InstitutionId"
        - $ref: "#/components/parameters/ActivityId"
        - $ref: "#/components/parameters/PostId"
      responses:
        "200":
          description: 刪除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              examples:
                success:
                  value:
                    success: true
                    content:
                      message: "活動已成功刪除"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /institutions/{InstitutionId}/posts/{postId}/like:
    post:
      tags:
        - Posts
      summary: 對留言新增表情反應
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ActivityId"
        - $ref: "#/components/parameters/PostId"
        - $ref: "#/components/parameters/UserId"
      responses:
        "200":
          description: 新增表情反應成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    $ref: "#/components/schemas/Post"
    delete:
      tags: [Posts]
      summary: 取消對留言表情反應
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ActivityId"
        - $ref: "#/components/parameters/PostId"
        - $ref: "#/components/parameters/UserId"
      responses:
        "200":
          description: 取消表情反應成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    $ref: "#/components/schemas/Post"

  /institutions/{InstitutionId}/posts/{postId}/comments:
    post:
      summary: 發表留言
      description: 在指定貼文下新增留言
      tags:
        - Comments
      parameters:
        - $ref: "#/components/parameters/InstitutionId"
        - $ref: "#/components/parameters/ActivityId"
        - $ref: "#/components/parameters/PostId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentCreate"
      responses:
        "201":
          description: 留言發表成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              examples:
                success:
                  value:
                    success: true
                    content:
                      message: "留言已成功發表"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/ValidationError"
    get:
      summary: 取得貼文留言清單
      description: 支援分頁的留言清單查詢
      tags:
        - Comments
      parameters:
        - $ref: "#/components/parameters/InstitutionId"
        - $ref: "#/components/parameters/ActivityId"
        - $ref: "#/components/parameters/PostId"
        # - $ref: "#/components/parameters/Page"
        # - $ref: "#/components/parameters/Limit"
        # - $ref: "#/components/parameters/Sort"
        # - $ref: "#/components/parameters/Order"
      responses:
        "200":
          description: 留言清單
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  content:
                    type: array
                    items:
                      $ref: "#/components/schemas/Comment"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"

  # /institutions/{InstitutionId}/comments/{commentId}:
  #   put:
  #     summary: 編輯留言
  #     description: 更新指定留言的內容
  #     tags:
  #       - Comments
  #     parameters:
  #       - $ref: "#/components/parameters/ActivityId"
  #       - $ref: "#/components/parameters/CommentId"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/CommentUpdate"
  #     responses:
  #       "200":
  #         description: 留言更新成功
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/SuccessResponse"
  #       "400":
  #         $ref: "#/components/responses/BadRequest"
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #       "401":
  #         $ref: "#/components/responses/Unauthorized"
  #       "403":
  #         $ref: "#/components/responses/Forbidden"
  #       "422":
  #         $ref: "#/components/responses/ValidationError"
  #   delete:
  #     summary: 刪除留言
  #     description: 永久刪除指定的留言
  #     tags:
  #       - Comments
  #     parameters:
  #       - $ref: "#/components/parameters/ActivityId"
  #       - $ref: "#/components/parameters/CommentId"
  #     responses:
  #       "200":
  #         description: 刪除成功
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/SuccessResponse"
  #             examples:
  #               success:
  #                 value:
  #                   success: true
  #                   content:
  #                     message: "留言已成功刪除"
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #       "401":
  #         $ref: "#/components/responses/Unauthorized"
  #       "403":
  #         $ref: "#/components/responses/Forbidden"

  # /institutions/{InstitutionId}/comments/{commentId}/replies:
  #   post:
  #     summary: 回覆留言
  #     description: 對指定留言進行回覆
  #     tags:
  #       - Replies
  #     parameters:
  #       - $ref: "#/components/parameters/ActivityId"
  #       - $ref: "#/components/parameters/CommentId"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/ReplyCreate"
  #     responses:
  #       "201":
  #         description: 回覆成功
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/SuccessResponse"
  #             examples:
  #               success:
  #                 value:
  #                   success: true
  #                   content:
  #                     id: "reply_001"
  #                     content: "我同意這個想法！"
  #                     author: "user2"
  #                     created_at: "2024-01-15T10:45:00Z"
  #       "400":
  #         $ref: "#/components/responses/BadRequest"
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #       "401":
  #         $ref: "#/components/responses/Unauthorized"
  #       "422":
  #         $ref: "#/components/responses/ValidationError"
  #   get:
  #     summary: 取得回覆清單
  #     description: 支援分頁的回覆清單查詢
  #     tags:
  #       - Replies
  #     parameters:
  #       - $ref: "#/components/parameters/ActivityId"
  #       - $ref: "#/components/parameters/CommentId"
  #       - $ref: "#/components/parameters/Page"
  #       - $ref: "#/components/parameters/Limit"
  #     responses:
  #       "200":
  #         description: 回覆清單
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/PaginatedResponse"
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #       "401":
  #         $ref: "#/components/responses/Unauthorized"

  # /institutions/{InstitutionId}/comments/{commentId}/reactions:
  #   post:
  #     summary: 新增表情反應
  #     description: 對指定留言新增表情反應
  #     tags:
  #       - Reactions
  #     parameters:
  #       - $ref: "#/components/parameters/ActivityId"
  #       - $ref: "#/components/parameters/CommentId"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/ReactionCreate"
  #     responses:
  #       "201":
  #         description: 表情新增成功
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/SuccessResponse"
  #             examples:
  #               success:
  #                 value:
  #                   success: true
  #                   content:
  #                     emoji: "👍"
  #                     user: "user1"
  #                     created_at: "2024-01-15T10:50:00Z"
  #       "400":
  #         $ref: "#/components/responses/BadRequest"
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #       "401":
  #         $ref: "#/components/responses/Unauthorized"
  #       "409":
  #         $ref: "#/components/responses/Conflict"
  #   delete:
  #     summary: 取消表情反應
  #     description: 移除指定留言的表情反應
  #     tags:
  #       - Reactions
  #     parameters:
  #       - $ref: "#/components/parameters/ActivityId"
  #       - $ref: "#/components/parameters/CommentId"
  #       - name: emoji
  #         in: query
  #         required: true
  #         description: 要移除的表情符號
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: 表情移除成功
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/SuccessResponse"
  #             examples:
  #               success:
  #                 value:
  #                   success: true
  #                   content:
  #                     message: "表情反應已移除"
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #       "401":
  #         $ref: "#/components/responses/Unauthorized"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    UserId:
      name: userId
      in: query
      required: true
      description: 使用者的唯一識別碼
      schema:
        type: string
        example: 1

    InstitutionId:
      name: institutionId
      in: path
      required: true
      description: 機構的唯一識別碼
      schema:
        type: string
        example: 123

    ActivityId:
      name: activityId
      in: path
      required: true
      description: 活動的唯一識別碼
      schema:
        type: string
        pattern: "^act_[a-zA-Z0-9]+$"
        example: act_123

    rel_ActivityId:
      name: related_activity_id
      in: query
      required: true
      description: 活動的唯一識別碼
      schema:
        type: string
        example: act_123

    PostId:
      name: postId
      in: path
      required: true
      description: 任務的唯一識別碼
      schema:
        type: string
        # pattern: "^act_[a-zA-Z0-9]+$"
        example: post_123

    CommentId:
      name: commentId
      in: path
      required: true
      description: 留言的唯一識別碼
      schema:
        type: string
        pattern: "^cmt_[a-zA-Z0-9]+$"
        example: cmt_001

    RequestId:
      name: requestId
      in: path
      required: true
      description: 加入行動請求的唯一識別碼
      schema:
        type: string
        example: req_001

    Page:
      name: page
      in: query
      description: 頁數（從 1 開始）
      schema:
        type: integer
        minimum: 1
        default: 1
        example: 1

    Limit:
      name: limit
      in: query
      description: 每頁項目數量
      schema:
        type: integer
        minimum: 1
        maximum: 3
        default: 3
        example: 3

    Sort:
      name: sort
      in: query
      description: 排序欄位
      schema:
        type: string
        enum: [created_at, updated_at, title, author]
        default: created_at

    Order:
      name: order
      in: query
      description: 排序方向
      schema:
        type: string
        enum: [asc, desc]
        default: desc

  responses:
    BadRequest:
      description: 請求參數錯誤
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            badRequest:
              value:
                success: false
                error:
                  code: "BAD_REQUEST"
                  message: "請求參數格式錯誤"
                  details: "無效的日期格式"

    Unauthorized:
      description: 未授權訪問
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            unauthorized:
              value:
                success: false
                error:
                  code: "UNAUTHORIZED"
                  message: "請先登入以訪問此資源"

    Forbidden:
      description: 禁止訪問
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            forbidden:
              value:
                success: false
                error:
                  code: "FORBIDDEN"
                  message: "您沒有權限執行此操作"

    NotFound:
      description: 資源不存在
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            notFound:
              value:
                success: false
                error:
                  code: "NOT_FOUND"
                  message: "找不到指定的資源"

    Conflict:
      description: 資源衝突
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            conflict:
              value:
                success: false
                error:
                  code: "CONFLICT"
                  message: "資源已存在或操作衝突"

    ValidationError:
      description: 資料驗證錯誤
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ValidationErrorResponse"
          examples:
            validation:
              value:
                success: false
                error:
                  code: "VALIDATION_ERROR"
                  message: "資料驗證失敗"
                  fields:
                    title: ["標題不能為空"]
                    start_time: ["開始時間必須晚於當前時間"]

    InternalServerError:
      description: 伺服器內部錯誤
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            serverError:
              value:
                success: false
                error:
                  code: "INTERNAL_SERVER_ERROR"
                  message: "伺服器內部錯誤，請稍後再試"

  schemas:
    # 統一回應格式
    BaseResponse:
      type: object
      required: [success]
      properties:
        success:
          type: boolean
          description: 操作是否成功
        # timestamp:
        #   type: string
        #   format: date-time
        #   description: 回應時間戳
        #   example: "2025-07-05T09:00:00"

    SuccessResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            success:
              type: boolean
              enum: [true]
            content:
              description: 成功回應的資料內容
              type: object

    ErrorResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            success:
              type: boolean
              enum: [false]
            error:
              type: object
              required: [code, message]
              properties:
                code:
                  type: string
                  description: 錯誤代碼
                  example: "VALIDATION_ERROR"
                message:
                  type: string
                  description: 錯誤訊息
                  example: "資料驗證失敗"
                details:
                  type: string
                  description: 詳細錯誤說明
                  example: "標題欄位不能為空"

    ValidationErrorResponse:
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"
        - type: object
          properties:
            error:
              type: object
              required: [code, message, fields]
              properties:
                code:
                  type: string
                  enum: ["VALIDATION_ERROR"]
                message:
                  type: string
                  example: "資料驗證失敗"
                fields:
                  type: object
                  description: 欄位驗證錯誤詳情
                  additionalProperties:
                    type: array
                    items:
                      type: string
                  example:
                    title: ["標題不能為空", "標題長度必須介於 1-100 字元"]
                    email: ["請輸入有效的電子郵件地址"]

    PaginatedResponse:
      allOf:
        - $ref: "#/components/schemas/SuccessResponse"
        - type: object
          properties:
            content:
              type: object
              required: [data, pagination]
              properties:
                data:
                  type: array
                  description: 資料陣列
                  items:
                    type: object
                pagination:
                  $ref: "#/components/schemas/Pagination"

    Pagination:
      type: object
      required: [page, limit, total, totalPages, hasNext, hasPrev]
      properties:
        page:
          type: integer
          description: 當前頁數
          minimum: 1
          example: 1
        limit:
          type: integer
          description: 每頁項目數量
          minimum: 1
          example: 20
        total:
          type: integer
          description: 總項目數
          minimum: 0
          example: 100
        totalPages:
          type: integer
          description: 總頁數
          minimum: 0
          example: 5
        hasNext:
          type: boolean
          description: 是否有下一頁
          example: true
        hasPrev:
          type: boolean
          description: 是否有上一頁
          example: false

    # 活動相關 Schema
    ActivityBase:
      type: object
      required: [title, start_time, end_time]
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 100
          description: 活動標題
          example: "剩食問題"
        description:
          type: string
          maxLength: 1000
          description: 活動描述
          example: "暫無描述"
        start_time:
          type: string
          format: date-time
          description: 活動開始時間
          example: "2025-07-05T09:00:00"
        end_time:
          type: string
          format: date-time
          description: 活動結束時間
          example: "2025-10-05T09:00:00"
        types:
          type: array
          description: 活動SGDs類型
          example: [2, 4, 13]

    ActivityCreate:
      allOf:
        - $ref: "#/components/schemas/ActivityBase"
        - $ref: "#/components/schemas/StageCreate"

    ActivityUpdate:
      allOf:
        - $ref: "#/components/schemas/ActivityBase"
        - $ref: "#/components/schemas/StageCreate"
        - type: object
          # required: [members]
          properties:
            members:
              type: array
              items:
                type: string
              example: ["user1", "user2", "user3"]

    Activity:
      allOf:
        - $ref: "#/components/schemas/ActivityBase"
        - type: object
          required: [id, created_at, updated_at]
          properties:
            id:
              type: string
              # pattern: "^act_[a-zA-Z0-9]+$"
              description: 活動唯一識別碼
              example: "act_123"
            user_id:
              type: string
              description: 活動唯一識別碼
              example: "1"
            progresss_percentage:
              type: number
              minimum: 0
              maximum: 100
              description: 進度百分比
              example: 100
            created_at:
              type: string
              format: date-time
              description: 建立時間
              example: "2025-07-05T09:00:00"
            updated_at:
              type: string
              format: date-time
              description: 最後更新時間
              example: "2025-10-05T09:00:00"
            stages:
              type: array
              description: 活動階段列表
              items:
                $ref: "#/components/schemas/Stage"
            allowed_join_open:
              type: boolean
              description: 是否允許自由加入活動
              example: false
            joined_by_user:
              type: boolean
              description: 是否已加入活動 #學生身分(-1: 未加入; 0:申請加入; 1:已加入;)
              example: -1
            members:
              type: array
              items:
                type: string
              minItems: 1
              maxItems: 50
              description: 參與成員列表
              example: ["user1", "user2", "user3"]
            posts:
              $ref: "#/components/schemas/Post"
            comments:
              $ref: "#/components/schemas/Comment"

    # 加入請求相關 Schema
    JoinRequestInput:
      type: object
      required: [user_id]
      properties:
        user_id:
          type: string
          example: "23"

    JoinReult:
      description: 回復請求後列表
      type: object
      properties:
        request_list:
          type: array
          description: 等待回復請求列表
          items:
            type: object
            required: [user_id, time]
            properties:
              user_id:
                type: string
                example: "22"
              time:
                type: string
                example: "2025-09-11T09:00:00"
        rejected_list:
          type: array
          description: 拒絕請求列表
          items:
            type: object
            required: [user_id, time]
            properties:
              user_id:
                type: string
                example: "24"
              time:
                type: string
                example: "2025-09-20T09:00:00"

    JoinRequest:
      description: 加入請求列表
      type: object
      # required: [id, user_id, time]
      properties:
        request_list:
          type: array
          description: 等待回復請求列表
          items:
            type: object
            required: [user_id, time]
            properties:
              user_id:
                type: string
                example: "22"
              time:
                type: string
                example: "2025-09-11T09:00:00"
        rejected_list:
          type: array
          description: 拒絕請求列表
          items:
            type: object
            required: [user_id, time]
            properties:
              user_id:
                type: string
                example: "24"
              time:
                type: string
                example: "2025-09-20T09:00:00"
      # example:
      #   - id: "req_001"
      #     user_id: "user_123"
      #     time: "1783977600"
      #   - id: "req_002"
      #     user_id: "user_456"
      #     time: "1783981200"

    # 階段相關 Schema
    StageBase:
      type: object
      required: [order, name, start_time, end_time]
      properties:
        order:
          type: integer
          description: 階段順序
          example: 1
        name:
          type: string
          description: 階段名稱
          example: 行動規劃
        completed:
          type: boolean
          description: 階段完成度
          example: true
        start_time:
          type: string
          format: date-time
          description: 開始時間
          example: "2025-07-05T09:00:00"
        end_time:
          type: string
          format: date-time
          description: 結束時間
          example: "2025-10-05T09:00:00"

    StageCreate:
      type: object
      required: [stages]
      properties:
        stages:
          type: array
          description: 活動階段列表
          items:
            $ref: "#/components/schemas/StageBase"

    Stage:
      allOf:
        - $ref: "#/components/schemas/StageBase"
        - type: object
          required: [id, created_at, updated_at]
          properties:
            # id:
            #   type: string
            #   pattern: "^stage_[a-zA-Z0-9]+$"
            #   description: 階段唯一識別碼
            #   example: "stage_001"
            created_at:
              type: string
              format: date-time
              description: 建立時間
              example: "2025-07-05T09:00:00"
            updated_at:
              type: string
              format: date-time
              description: 最後更新時間
              example: "2025-10-05T09:00:00"

    # 任務相關 Schema
    PostBase:
      type: object
      required: [content, stage, allowed_comment]
      properties:
        id:
          type: string
          description: 任務唯一識別碼
          example: "post_123"
        user_id:
          type: string
          description: 作者識別碼
          example: "user1"
        content:
          type: string
          example: <p>剩食問題調查</p>
        stage:
          type: integer
          example: 1
        allowed_comment:
          type: boolean
          example: true

    Post:
      type: array
      description: 任務列表
      items:
        allOf:
          - $ref: "#/components/schemas/PostBase"
          - type: object
            required:
              [id, author, created_at, updated_at, reactions, replyCount]
            properties:
              created_at:
                type: string
                format: date-time
                description: 建立時間
                example: "2025-07-05T09:00:00"
              updated_at:
                type: string
                format: date-time
                description: 最後更新時間
                example: "2025-10-05T09:00:00"
              replies_count:
                type: integer
                example: 0
              reactions_count:
                type: integer
                example: 5
              reactions:
                type: object
                properties:
                  like:
                    type: integer
                    example: 3
                  laugh:
                    type: integer
                    example: 2
              liked_by_user:
                type: string
                example: laugh
              img_path:
                type: string
                example: images/[post_id]/
              file_path:
                type: string
                example: files/[post_id]/

    # 留言相關 Schema
    CommentBase:
      type: object
      required: [content]
      properties:
        id:
          type: string
          example: "cmt_01"
        user_id:
          type: string
          example: "01"
        content:
          type: string
          minLength: 1
          maxLength: 2000
          description: 留言內容
          example: "<p>挑食狀況蠻明顯的</p>"

    CommentCreate:
      $ref: "#/components/schemas/CommentBase"

    CommentUpdate:
      $ref: "#/components/schemas/CommentBase"

    Comment:
      allOf:
        - $ref: "#/components/schemas/CommentBase"
        - type: object
          required: [id, author, created_at, updated_at, reactions, replyCount]
          properties:
            parent_id:
              type: string
              example: "post_123"
            created_at:
              type: string
              format: date-time
              description: 建立時間
              example: "2025-07-05T09:00:00"
            updated_at:
              type: string
              format: date-time
              description: 最後更新時間
              example: "1748877600"
            # reactions:
            #   type: array
            #   description: 表情反應統計
            #   items:
            #     $ref: "#/components/schemas/ReactionSummary"
            # replyCount:
            #   type: integer
            #   minimum: 0
            #   description: 回覆數量
            #   example: 3

    # 回覆相關 Schema
    ReplyBase:
      type: object
      required: [content]
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 1000
          description: 回覆內容
          example: "我同意這個想法，讓我們開始執行吧！"

    ReplyCreate:
      $ref: "#/components/schemas/ReplyBase"

    ReplyUpdate:
      $ref: "#/components/schemas/ReplyBase"

    Reply:
      allOf:
        - $ref: "#/components/schemas/ReplyBase"
        - type: object
          required: [id, author, created_at, updated_at]
          properties:
            id:
              type: string
              pattern: "^reply_[a-zA-Z0-9]+$"
              description: 回覆唯一識別碼
              example: "reply_001"
            author:
              type: string
              description: 作者識別碼
              example: "user2"
            created_at:
              type: string
              format: date-time
              description: 建立時間
              example: "2024-01-15T10:45:00Z"
            updated_at:
              type: string
              format: date-time
              description: 最後更新時間
              example: "2024-01-15T10:45:00Z"

    # 表情反應相關 Schema
    ReactionCreate:
      type: object
      required: [emoji]
      properties:
        emoji:
          type: string
          minLength: 1
          maxLength: 10
          description: 表情符號（僅支援 Unicode emoji）
          example: "👍"

    ReactionSummary:
      type: object
      required: [emoji, count]
      properties:
        emoji:
          type: string
          description: 表情符號
          example: "👍"
        count:
          type: integer
          minimum: 1
          description: 該表情的數量
          example: 5
        users:
          type: array
          description: 使用該表情的用戶列表（可選）
          items:
            type: string
          example: ["user1", "user2", "user3"]
